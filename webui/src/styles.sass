/* You can add global styles to this file, and also import other style files */

// "low" is lower priority CSS layer.
// Put here all rules that shouldn't overwrite PrimeNG styling.
@layer low
  // Overwrite default browser underlined anchors.
  a
    text-decoration: none
    color: var(--p-primary-color)

    // Apply the underline only for :hover.
    &:hover
      text-decoration: underline

  // Underlined section header style.
  h3.underlined
    padding: 3px 6px 3px 6px
    margin-top: 2px
    border-bottom: 2px solid var(--p-content-border-color)

  // Generic error red font style.
  .app-error
    color: var(--p-form-field-invalid-placeholder-color)

// "high" is higher priority CSS layer.
// Put here all rules that overwrite PrimeNG styling.
@layer high
  // When the table header has p-panel inside, do not add extra horizontal padding,
  // because the panel has it's own padding.
  .p-datatable .p-datatable-header:has(.p-panel)
    padding-left: 0
    padding-right: 0

  // p-panel with .p-panel-icons-hidden class applied has custom toggle show/hide panel button on the left side of the panel,
  // so hide the default PrimeNG toggle button.
  .p-panel-icons-hidden .p-panel-icons
    display: none

  // Apply minimal width to all PrimeNG Fieldset components so that they may shrink for smaller viewports.
  .p-fieldset
    min-width: 0

    // Apply bold font for custom legend in PrimeNG Fieldset components.
    .stork-fieldset-legend-text
      font-weight: var(--p-fieldset-legend-font-weight)

    // Force the correct font size.
    .stork-fieldset-legend-text, .p-fieldset-legend-label
      font-size: 1rem

    // Prevent horizontal overflow by enabling scrollbars.
    // Do not apply this style when there is PrimeNG form input wrapper inside,
    // because it messes up PrimeNG overlays.
    .p-fieldset-content:not(:has(.p-inputwrapper))
      overflow-x: auto

  // Overwrite default margin-left: auto for the right hand side paginator.
  .p-paginator > :last-child:not(.p-paginator-last):not(.p-inputwrapper)
    margin-left: 1.25rem

  // Don't preserve the new lines in tooltip text. The line still can be broken by using <br> tag.
  .p-tooltip .p-tooltip-text
    white-space: normal

  // Resets default pointer-events to auto for button elements which were disabled
  // due to lack of privileges (authorization). This is to allow displaying HTML title tag
  // content when mouse hovers over disabled button. Short feedback about lack of privileges
  // should be displayed.
  button.app-disabled.p-disabled
    pointer-events: auto !important

  // In case PrimeNG input element is an flex item, apply min-width value zero to allow flex shrinking.
  .p-inputwrapper > .p-component
    min-width: 0

  // Utility class to apply on form elements.
  // Take full width and limit that with one global width value.
  .max-w-form
    max-width: var(--max-form-width)
    width: 100%

    // Propagate full width inside of PrimeNG form components.
    input, .p-inputwrapper, .p-inputtext, .p-inputnumber
      width: 100%

    // Reapply max-width to PrimeNG wrapper containers that are direct children of components having .max-w-form applied.
    & > .p-inputwrapper
      max-width: var(--max-form-width)

  // Add small margin next to message icon.
  .p-message-icon
    margin-right: 0.5rem

  // Apply by default small vertical margin for PrimeNG Message component.
  .p-message
    margin-bottom: 0.5rem
    margin-top: 0.5rem

  // Custom style of PrimeNG message component.
  // When two text spans are injected to the component (first using "text" input; second using <ng-content></ng-content>
  // content projection), make the first span bold to act as a message summary.
  .custom-message
    .p-message-content
      > span:nth-of-type(1)
        font-weight: 700
    @mixin reorder-and-wrap-message-content
      // Custom wrapped message. Make the icon, summary (provided via "text" input) and close button appear in the first
      // line of the component.
      // Text content of the message (provided via <ng-content></ng-content> content projection) will appear in the second line.
      .p-message-content
        flex-wrap: wrap
        > span:nth-of-type(1)
          flex: 1 1 75%
          order: -1
        .p-message-icon, .p-message-close-button
          order: -1

    // Apply custom wrapped message style when .custom-message.wrap-message class is used.
    &.wrap-message
      @include reorder-and-wrap-message-content
    // Apply custom wrapped message style when .wrap-message class is used and viewport size is below 576px (sm breakpoint in primeflex).
    @media screen and (max-width: 575px)
      @include reorder-and-wrap-message-content

  // Limit maximum width for the confirmation dialog message.
  .p-confirmdialog-message
    @media screen and (min-width: 992px)
      max-width: 50vw

  @media screen and (max-width: 640px)
    .p-toast.stork-toast
      // Make toasts visible on smaller screens.
      // Prevent width overflow.
      max-width: calc(100vw - 2rem)

  @media screen and (max-width: 575px)
    :root
      // Apply smaller padding to PrimeNG Fieldset component for smaller viewports to save horizontal space.
      --p-fieldset-padding: 0 0.5rem 0.5rem 0.5rem
      // Apply smaller padding to PrimeNG Dialog to save more vertical space for dialog content.
      --p-dialog-header-padding: 0.75rem
      --p-dialog-content-padding: 0 0.75rem 0.75rem 0.75rem

  @media screen and (max-width: 575px)
    .p-panel .p-panel-content, app-tab-view > .p-tabs > .p-tabpanels
      // Decrease panel content horizontal padding to save the space on smaller viewports.
      // Apply the same for tabPanels container.
      padding-right: 0.5rem
      padding-left: 0.5rem

  // Define gray-colored spinner.
  @keyframes progress-spinner-color-gray
    0%
      stroke: var(--p-gray-400)
    100%
      stroke: var(--p-gray-400)

  // Define white-colored spinner.
  @keyframes progress-spinner-color-white
    0%
      stroke: #fff
    100%
      stroke: #fff

  .gray-spinner .p-progressspinner-circle
    // Overwrite PrimeNG default colorful spinner with gray-colored spinner.
    animation-name: p-progressspinner-dash, progress-spinner-color-gray

  .white-spinner .p-progressspinner-circle
    // Overwrite PrimeNG default colorful spinner with white-colored spinner.
    animation-name: p-progressspinner-dash, progress-spinner-color-white

  .p-multiselect-display-chip .p-multiselect-label
    // There is a bug in calculating this gap in PrimeNG, so provide it here.
    gap: 0.25rem

// No css @layer - global styles, that have the highest priority.
// These rules overwrite low, primeng and high layers if necessary.

// console-like font style.
.monospace
  font-family: "Lucida Console", Monaco, monospace

// Capitalize first letter of the first word in the container.
.capitalize-first
  &::first-letter
    text-transform: capitalize
  // Propagate the style inside of p-tag component that has the .capitalize-first class applied.
  &.p-tag
    .p-tag-value::first-letter
      @layer high
        text-transform: capitalize

// Allows breaking long lines of text on small
// screens to avoid overlapping on other UI blocks.
.word-break-all
  word-break: break-all

// Prevent the content from growing too wide on larger displays.
// These classes mimic Primeflex utility classes (that end at 30rem max-width).
.max-w-100rem
  max-width: 100rem

.max-w-50rem
  max-width: 50rem

.max-w-40rem
  max-width: 40rem

// Set max-width to prevent horizontal overflow.
.max-w-100vw
  // full viewport width minus some space for margins and paddings
  max-width: calc(100vw - 5rem)

// Utility class to hide the element but keep the space.
.hidden-space
  visibility: hidden

// Stork responsive layout using flexbox.
section.stork-layout
  display: flex
  justify-content: space-between
  gap: 1rem
  flex-wrap: wrap

  & > article
    // article is supposed to take 66% width of the viewport.
    // It is main content on the page.
    // It shrinks and grows.
    flex: 2 1 58rem

    & > div:not(:first-child)
      // If there are more div sections in the article, add some horizontal margin to split them.
      margin-top: 1rem

  & > aside
    // aside is supposed to take 33% width of the viewport.
    // It is additional content on the right hand side.
    // It shrinks and grows. When there is not enough space, it goes below the article content and both
    // article and aside take 100% width of the viewport.
    flex: 1 1 19rem

// Set 0 margin for full width top navbar position.
body
  margin: 0
  font-family: 'Open Sans', 'Helvetica Neue', sans-serif

// Root variables.
:root
  // Max width of form. Apply max-width to prevent the form from becoming too wide.
  --max-form-width: 35rem
  // Missing css variables that were used before PrimeNG v18. They differ in the dark mode.
  --surface-ground: var(--p-surface-50)
  --surface-hover: var(--p-surface-100)
  &.dark
    --surface-ground: var(--p-surface-950)
    --surface-hover: var(--p-surface-800)
